#!/usr/bin/env bash
set -euo pipefail

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
# –ü—É—Ç—å-–ø—Ä–µ—Ñ–∏–∫—Å –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤–Ω—É—Ç—Ä–∏ –º–æ–Ω–æ—Ä–µ–ø—ã
PREFIX_BASE="${PREFIX_BASE:-components}"
# –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π origin –¥–ª—è –º–æ–Ω–æ—Ä–µ–ø—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏–≤–∞—Ç–Ω—ã–π GitHub-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π)
MONO_ORIGIN="${MONO_ORIGIN:-}"  # –ø—Ä–∏–º–µ—Ä: git@github.com:your-org/alterator-monorepo.git

# –°–ø–∏—Å–æ–∫ upstream-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ Alterator
REPOS=(
  "https://altlinux.space/alterator/alt-components.git"
  "https://altlinux.space/alterator/contributing.git"
  "https://altlinux.space/alterator/alteratorctl.git"
  "https://altlinux.space/alterator/alt-services.git"
  "https://altlinux.space/alterator/alterator-manager.git"
  "https://altlinux.space/alterator/alt-components-base.git"
  "https://altlinux.space/alterator/alterator-service-chrony.git"
  "https://altlinux.space/alterator/diag-domain-client.git"
  "https://altlinux.space/alterator/alterator-backend-component.git"
  "https://altlinux.space/alterator/backlog.git"
  "https://altlinux.space/alterator/alterator-service-samba-ad.git"
  "https://altlinux.space/alterator/alt-control.git"
  "https://altlinux.space/alterator/alterator-backend-control.git"
  "https://altlinux.space/alterator/alterator-module-executor.git"
  "https://altlinux.space/alterator/alterator-test-services.git"
  "https://altlinux.space/alterator/adt.git"
  "https://altlinux.space/alterator/alterator-service-samba-share.git"
  "https://altlinux.space/alterator/alterator-entry.git"
  "https://altlinux.space/alterator/alterator-backend-packages.git"
  "https://altlinux.space/alterator/alterator-backend-component_categories.git"
  "https://altlinux.space/alterator/alterator-backend-batch_components.git"
  "https://altlinux.space/alterator/alterator-backend-batch_component_categories.git"
  "https://altlinux.space/alterator/alterator-backend-edition.git"
  "https://altlinux.space/alterator/alterator-explorer.git"
  "https://altlinux.space/alterator/alterator-module-backend3.git"
  "https://altlinux.space/alterator/alterator-backend-systeminfo.git"
  "https://altlinux.space/alterator/alt-packages.git"
  "https://altlinux.space/alterator/adt-test-tools.git"
  "https://altlinux.space/alterator/alt-systeminfo.git"
  "https://altlinux.space/alterator/alterator-service-nextcloud.git"
  "https://altlinux.space/alterator/alterator-service-vsftpd.git"
  "https://altlinux.space/alterator/remote-polkit-agent.git"
  "https://altlinux.space/alterator/alterator-module-remote.git"
  "https://altlinux.space/alterator/alterator-backend-categories.git"
  "https://altlinux.space/alterator/alterator-interface-diag.git"
  "https://altlinux.space/alterator/alterator-backend-legacy.git"
  "https://altlinux.space/alterator/alterator-interface-application.git"
  "https://altlinux.space/alterator/alterator-interface-service.git"
  "https://altlinux.space/alterator/diag-domain-controller.git"
  "https://altlinux.space/alterator/python3-module-alterator.git"
  "https://altlinux.space/alterator/alterator-how-to-test.git"
)

# --- —Ñ—É–Ω–∫—Ü–∏–∏ ---
need() { command -v "$1" >/dev/null 2>&1 || { echo "‚ùå –ù—É–∂–Ω–∞ —É—Ç–∏–ª–∏—Ç–∞: $1"; exit 1; }; }

repo_name_from_url() {
  local url="$1"
  basename "$url" .git
}

default_branch_for_url() {
  local url="$1"
  local head
  head="$(git ls-remote --symref "$url" HEAD 2>/dev/null | awk '/^ref:/ {print $2}' | sed 's@refs/heads/@@')"
  if [[ -n "${head:-}" ]]; then
    echo "$head"; return
  fi
  if git ls-remote --heads "$url" main >/dev/null 2>&1; then echo "main"; return; fi
  if git ls-remote --heads "$url" master >/dev/null 2>&1; then echo "master"; return; fi
  git ls-remote --heads "$url" | awk '{print $2}' | sed 's@refs/heads/@@' | head -n1
}

# --- –ø—Ä–æ–≤–µ—Ä–∫–∏ ---
need git

# --- –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è ---
if [[ ! -d .git ]]; then
  echo "üß© –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é –Ω–æ–≤—ã–π git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
  git init
  git checkout -b main
  echo -e "# Alterator monorepo\n\n–°–æ–±—Ä–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é git subtree --squash." > README.md
  git add README.md
  git commit -m "chore: init monorepo"
else
  echo "‚úÖ .git —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é."
fi

# –ù–∞—Å—Ç—Ä–æ–∏–º origin, –µ—Å–ª–∏ –∑–∞–¥–∞–Ω
if [[ -n "${MONO_ORIGIN}" ]]; then
  if git remote get-url origin >/dev/null 2>&1; then
    git remote set-url origin "$MONO_ORIGIN"
  else
    git remote add origin "$MONO_ORIGIN"
  fi
fi

# --- –¥–æ–±–∞–≤–ª—è–µ–º upstream-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –∫–∞–∫ subtree ---
for url in "${REPOS[@]}"; do
  name="$(repo_name_from_url "$url")"
  remote="$name"
  prefix="${PREFIX_BASE}/${name}"
  branch="$(default_branch_for_url "$url")"

  # –¥–æ–±–∞–≤–ª—è–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º remote
  if git remote get-url "$remote" >/dev/null 2>&1; then
    git remote set-url "$remote" "$url"
  else
    git remote add "$remote" "$url"
  fi

  # –µ—Å–ª–∏ –∫–∞—Ç–∞–ª–æ–≥ —É–∂–µ –µ—Å—Ç—å ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
  if [[ -d "$prefix" ]]; then
    echo "‚Ü™Ô∏è  [$name] —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—é."
    continue
  fi

  echo "‚ûï –î–æ–±–∞–≤–ª—è—é $name ‚Üí $prefix (–≤–µ—Ç–∫–∞: $branch)"
  git fetch "$remote" "$branch"
  git subtree add --prefix="$prefix" "$remote" "$branch" --squash
done

echo "‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ $(pwd)"
echo "üí° –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –ø–æ–∑–∂–µ –∑–∞–ø—É—Å—Ç–∏: ./pull_updates.sh"
