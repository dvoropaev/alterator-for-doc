Требования к самоучителю по Alterator
=====================================

Общие положения
----------------
1. Самоучитель ориентирован на будущих участников разработки Alterator; излагать материал сухим, техническим, вики-подобным стилем.
2. Каждая глава открывается определением вида «X — …» в 1–2 предложения и сразу фиксирует назначение компонента.
3. Использовать третье лицо и безличные конструкции («необходимо», «следует», «предусмотрено»); избегать маркетинговых и оценочных формулировок.
4. Стремиться к максимальной полноте: каждая тема покрывает принципы работы, связи с другими компонентами, порядок действий и проверку результата.
5. Пояснения давать короткими предложениями; уточнения оформлять в скобках или после двоеточия.
6. Активно применять списки: маркированные — для возможностей и особенностей, нумерованные — для последовательностей операций и алгоритмов.

Оглавление и разделы
--------------------
1. Главная страница `generated_doc/html/index.html` содержит оглавление; структура должна включать разделы:
   - «Основы и подготовка»;
   - «Архитектура платформы»;
   - «Интерфейсы и формат Alterator»;
   - «Разработка и расширение модулей»;
   - «Каталог модулей Alterator»;
   - «Подпроекты и репозитории»;
   - «Справочные материалы».
2. Для каждого раздела предусмотреть отдельные HTML-страницы по ссылкам из оглавления; имена файлов и заголовков должны совпадать с пунктами меню.
3. Содержание каждой главы строится по единой схеме: назначение, устройство, взаимодействия, расширение, проверка результата.

Глубина раскрытия тем
---------------------
1. Раздел «Основы и подготовка» описывает вводные сведения: терминологию, обязательные знания, используемые технологии, интеграцию с дистрибутивом ALT, требования к окружению и зависимостям.
2. Раздел «Архитектура платформы» фиксирует компонентную модель Alterator, жизненный цикл модулей, организацию процессов и служб, потоки данных, взаимодействие частей системы через D-Bus.
3. Раздел «Интерфейсы и формат Alterator» перечисляет стандартные интерфейсы D-Bus, спецификации Alterator Entry и иных форматов, включает порядок создания и расширения интерфейсов, описание GUI и веб-интерфейсов.
4. Раздел «Разработка и расширение модулей» содержит инструкции по созданию backend- и интерфейсных модулей, правила интеграции с alterator-manager и другими менеджерами, принципы локализации, варианты распространения.
5. Раздел «Каталог модулей Alterator» раскрывает устройство каждого модуля из оглавления, описывает сценарии работы, D-Bus методы, точки расширения и шаги расширения существующих возможностей.
6. Раздел «Подпроекты и репозитории» документирует каждый каталог из `./subprojects` как самостоятельный проект: назначение, состав, зависимости, взаимодействие с другими частями Alterator, доступные интерфейсы, используемые механизмы D-Bus.
7. Раздел «Справочные материалы» формирует глоссарий, справочник объектов и методов D-Bus, шаблоны конфигураций, контрольные списки для внедрения и аудита.

Модули Alterator
----------------
1. Каждая глава о модуле описывает:
   - функциональность и архитектурную роль;
   - взаимосвязи с другими модулями и службами;
   - используемые D-Bus интерфейсы, методы, сигналы;
   - внутренние компоненты (backend, интерфейс, вспомогательные службы);
   - инструкции по расширению возможностей с пошаговым порядком и критериями проверки.
2. Для добавления собственных модулей привести отдельную процедуру: подготовка окружения, структура директорий, шаблоны файлов, регистрация в системе, проверка корректности.
3. Для расширения существующих модулей перечислить допустимые точки расширения, ограничения, последовательность действий, необходимые проверки и возможные ошибки.

Интерфейсы и D-Bus
-------------------
1. Все разделы обязаны увязывать описываемые компоненты с D-Bus: список сервисов, объектов, интерфейсов, методы и коды возврата («0 — успех», «!= 0 — ошибка»).
2. Для создания собственных интерфейсов сформировать инструкцию: требования, структура описания, публикация на D-Bus, тестирование взаимодействия, рекомендации по расширяемости.
3. В подразделах по подпроектам и модулям фиксировать зависимость от D-Bus, используемые шины, механизмы авторизации (если применимо).

Документация по подпроектам
---------------------------
1. Каждому каталогу из `./subprojects` соответствует отдельная глава: описание задач, ключевых компонентов, схемы взаимодействия с базой кода Alterator.
2. В главах приводить структуру репозитория, основные пакеты, интерфейсы, связи с модулями и сервисами, порядок сборки и внедрения (если реализован).
3. Обязательно описывать способы расширения и интеграции подпроекта с другими частями платформы.

Требования к оформлению
-----------------------
1. Файлы размещать в каталоге `generated_doc/html` с иерархией каталогов согласно оглавлению.
2. Использовать кодировку UTF-8 и расширение `.html`.
3. Заголовки оформлять уровнями H1–H3 без пропуска уровней; порядок: H1 — название главы, H2 — основные разделы, H3 — детали.
4. Перечисления вводить лид-фразами: «Возможности:», «Порядок:», «Параметры:», «Ресурсы:».
5. Особенности и предупреждения выделять словами «Важно:», «Примечание:», «Требуется:».
6. Пути, идентификаторы, команды и конфигурации оформлять моноширинными блоками; для команд использовать отдельные блоки без комментариев внутри.
7. Поддерживать терминологическую согласованность в рамках главы и межссылок.
8. Для методов и API приводить сигнатуры, параметры, возвращаемые значения, коды ошибок.
